note
	description: "Main window for this application"
	author: "Generated by the New Vision2 Application Wizard."
	date: "$Date: 2016/6/4 15:53:42 $"
	revision: "1.0.0"

class
	MAIN_WINDOW

inherit
	EV_TITLED_WINDOW
		redefine
			create_interface_objects,
			initialize
		end

create
	default_create

feature {NONE} -- Initialization

	create_interface_objects
			-- <Precursor>
		do
			create main_container
			create game_stage
			create standard_status_bar
			create standard_status_label

		end

	initialize
			-- Build the interface for this window.
		do
			Precursor {EV_TITLED_WINDOW}

			build_main_container
			extend (main_container)

			close_request_actions.extend (agent request_close_window)

			set_title ("Maze game")
			set_size (400, 400)
		end

feature {NONE} -- Main container

	main_container: EV_VERTICAL_BOX
			-- Main container (contains all widgets displayed in this window).

	build_main_container
			-- Popultes `main_container'.
		do
			create main_container

			build_game_stage
			main_container.extend (game_stage)

			build_standard_status_bar
			main_container.extend (standard_status_bar)
			main_container.disable_item_expand (standard_status_bar)
		end

feature {NONE} -- Game Stage

	game_stage: EV_PIXMAP
			-- Stage for the maze game graphical representation.

	build_game_stage
			-- Populates `game_stage'.
		do
			game_stage.set_size(200, 200)
			game_stage.draw_text_top_left (10, 10, "Game running")
		end

feature {NONE} -- StatusBar Implementation

	standard_status_bar: EV_STATUS_BAR
			-- Standard status bar for this window

	standard_status_label: EV_LABEL
			-- Label situated in the standard status bar.

	build_standard_status_bar
			-- Populates the standard toolbar.
		do
			standard_status_bar.set_border_width (2)

			standard_status_label.set_text ("Game running")
			standard_status_label.align_text_left
			standard_status_bar.extend (standard_status_label)
		end

feature {NONE} -- Implementation, Close event

	request_close_window
			-- Process user request to close the window.
		do
			destroy

			if attached (create {EV_ENVIRONMENT}).application as a then
				a.destroy
			end
		ensure
			is_destroyed: is_destroyed
		end
end
